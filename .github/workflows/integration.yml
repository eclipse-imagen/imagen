name: Downstream integration build (GeoWebCache and GeoServer)

on:
  # trigger on PR, but only on master branch, the checkouts of the downstream projects are also targeting main (default branch)
  pull_request:
    branches:
      - master

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  MAVEN_OPTS: -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn -Dspotless.apply.skip=true -Dpom.fmt.skip=true -Dmaven.javadoc.skip=true

jobs:
  integration-build:
    strategy:
      fail-fast: false
      matrix:
        os: [ 'ubuntu-latest' ]
        experimental: [ true ]
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: 11
          distribution: 'temurin'
      - uses: actions/checkout@v4
      - name: Maven repository caching
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: gt-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            gt-maven-
      - name: Disable checksum offloading
        # See: https://github.com/actions/virtual-environments/issues/1187#issuecomment-686735760
        run: |
          sudo ethtool -K eth0 tx off rx off
      - name: Build ImageN
        run: |
          mvn -B clean install -T1C -DskipTests
      - name: Checkout GeoTools, GeoWebCache, GeoServer and more
        run: |
          cd ~
          echo "Preparing git ssh checkouts"
          mkdir ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
          echo "Checking out GeoTools"
          mkdir geotools
          git clone --filter=tree:0 https://github.com/geotools/geotools.git geotools
          echo "Checking out GeoWebCache"
          mkdir geowebcache
          git clone --filter=tree:0 https://github.com/GeoWebCache/geowebcache.git geowebcache
          echo "Checking out GeoServer"
          mkdir geoserver
          git clone --filter=tree:0 https://github.com/geoserver/geoserver.git geoserver
          echo "Checking out mapfish-print-v2"
          mkdir mapfish-print-v2
          git clone --filter=tree:0 https://github.com/mapfish/mapfish-print-v2.git mapfish-print-v2
      - name: Build GeoTools v2 with tests
        continue-on-error: ${{ matrix.experimental }}
        run: |
          cd ~
          cd geotools
          git checkout imagen
          ant -f ${{ github.workspace }}/docs/migration/code-update.xml -Dproject.dir=`pwd`
          mvn -B clean install -T1C -Dall -DskipTests -fae
          mvn -B test -T1C -Dall
      - name: Build GeoWebCache with tests
        continue-on-error: ${{ matrix.experimental }}
        run: |
          export TEST_OPTS="-XX:+UseStringDeduplication -XX:+UseG1GC -XX:MaxHeapFreeRatio=30 -XX:MinHeapFreeRatio=10"
          export MAVEN_OPTS="-Xmx1024m $TEST_OPTS"
          cd ~
          cd geowebcache/geowebcache
          git checkout imagen
          ant -f ${{ github.workspace }}/docs/migration/code-update.xml -Dproject.dir=`pwd`
          mvn -B install -nsu -Dspotless.apply.skip=true -DskipTests -T1C -fae
          mvn -B test -fae -nsu -T1C -Dspotless.apply.skip=true
      - name: Build Mapfish-print v2 with tests
        continue-on-error: ${{ matrix.experimental }}
        run: |
          cd ~
          cd mapfish-print-v2
          git checkout imagen
          ant -f ${{ github.workspace }}/docs/migration/code-update.xml -Dproject.dir=`pwd`
          mvn -B install -nsu -DskipTests -T1C -fae
          mvn -B -f pom.xml test -fae -nsu -T1C
      - name: Build GeoServer with tests
        continue-on-error: ${{ matrix.experimental }}
        run: |
          echo "Building GeoServer"
          export TEST_OPTS="-XX:+UseStringDeduplication -XX:+UseG1GC -XX:MaxHeapFreeRatio=30 -XX:MinHeapFreeRatio=10"
          export MAVEN_OPTS="-Xmx512m $TEST_OPTS"
          cd ~
          cd geoserver/src
          ant -f ${{ github.workspace }}/docs/migration/code-update.xml -Dproject.dir=`pwd`
          git checkout imagen
          sed -i "s/<mf.version>2.2.0<\/mf.version>/<mf.version>2.3-SNAPSHOT<\/mf.version>/g" pom.xml
          sed -i "s/<gf.version>3.6.0<\/gf.version>/<gf.version>3.6-SNAPSHOT<\/gf.version>/g" pom.xml
          mvn -B -f pom.xml install -nsu -Prelease -Dspotless.apply.skip=true -DskipTests -T1C -fae
          mvn -B -f community/pom.xml install -nsu -DcommunityRelease -Dspotless.apply.skip=true -DskipTests -T1C -fae
          mvn -B -f src/pom.xml test -fae -T1C -nsu -Dtest.maxHeapSize=512m -Djvm.opts="$TEST_OPTS" -Prelease -Dspotless.apply.skip=true
      - name: Remove intagration checkouts
        if: success() || failure()
        run: |
          cd ~
          echo "Removing clone geotools, geoserver, mapfish-print-v2, geowebcache"
          rm -rf geotools geoserver mapfish-print-v2 geowebcache
      - name: Remove SNAPSHOT jars from repository
        if: success() || failure()
        run: |
          find ~/.m2/repository -name "*SNAPSHOT*" -type d | xargs rm -rf {}